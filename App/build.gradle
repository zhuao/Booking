apply plugin: 'com.android.application'

dependencies {
    compile project(':Base')

    compile 'com.jakewharton:butterknife:6.1.0'
    compile 'com.squareup.retrofit:retrofit:1.9.0'
    compile 'com.squareup.okhttp:okhttp:2.2.0'
    compile 'de.greenrobot:eventbus:2.4.0'
    compile 'com.android.support:cardview-v7:21.0.+'
    compile 'com.android.support:recyclerview-v7:21.0.+'
    compile 'com.journeyapps:zxing-android-embedded:3.0.2@aar'
    compile 'com.google.zxing:core:3.2.0'
    compile 'com.wdullaer:materialdatetimepicker:2.1.1'

    compile 'joda-time:joda-time:2.8.2'
    testCompile 'org.mockito:mockito-all:1.10.19'
    testCompile 'junit:junit:4.12'
    testCompile ("com.squareup.assertj:assertj-android:1.0.0") {
        exclude group: 'com.android.support', module:'support-annotations'
    }
    testCompile 'org.robolectric:robolectric:3.0-rc3'
}

android {
    compileSdkVersion appTargetSDKVersion
    buildToolsVersion appBuildToolVersion

    defaultConfig {
        minSdkVersion appMinSDKVersion
        targetSdkVersion appTargetSDKVersion
    }

    signingConfigs {
        release {
            storeFile file("debug.keystore")
            storePassword "android"
            keyAlias "androiddebugkey"
            keyPassword "android"
        }
    }

    productFlavors{
        dev{
            applicationId = "com.thoughtworks.android.booking"
        }

        production{
            applicationId = "com.thoughtworks.android.booking"
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }

        applicationVariants.all { variant ->
            variant.outputs.each { output ->
                def file = output.outputFile
                def variantName = "${variant.flavorName}-${variant.buildType.name.toLowerCase()}";
                def newName = "Thoughtworks-Booking-${variantName}.apk";
                output.outputFile = new File(file.parent,newName);
            }

        }
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }
}